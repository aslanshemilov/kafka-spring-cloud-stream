{"timestamp":"2021-08-15T18:30:38.704Z","appMessage":"Starting Application using Java 1.8.0_202 on Officeroom with PID 22600 (C:\\Users\\Officeroom\\IdeaProjects\\kafka-spring-cloud-stream\\target\\classes started by Officeroom in C:\\Users\\Officeroom\\IdeaProjects\\kafka-spring-cloud-stream)","class":"com.kafka.data.Application","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:38.704Z","appMessage":"HV000001: Hibernate Validator 6.2.0.Final","class":"org.hibernate.validator.internal.util.Version","thread":"background-preinit","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:38.717Z","appMessage":"The following profiles are active: local","class":"com.kafka.data.Application","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:38.780Z","appMessage":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable","class":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:38.781Z","appMessage":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'","class":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.102Z","appMessage":"No bean named 'errorChannel' has been explicitly defined. Therefore, a default PublishSubscribeChannel will be created.","class":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.120Z","appMessage":"No bean named 'integrationHeaderChannelRegistry' has been explicitly defined. Therefore, a default DefaultHeaderChannelRegistry will be created.","class":"org.springframework.integration.config.DefaultConfiguringBeanFactoryPostProcessor","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.216Z","appMessage":"Bean 'org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.221Z","appMessage":"Bean 'bindersHealthContributor' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthContributor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.223Z","appMessage":"Bean 'bindersHealthIndicatorListener' of type [org.springframework.cloud.stream.config.BindersHealthIndicatorAutoConfiguration$BindersHealthIndicatorListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.231Z","appMessage":"Bean 'org.springframework.integration.config.IntegrationManagementConfiguration' of type [org.springframework.integration.config.IntegrationManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.244Z","appMessage":"Bean 'integrationChannelResolver' of type [org.springframework.integration.support.channel.BeanFactoryChannelResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.246Z","appMessage":"Bean 'integrationDisposableAutoCreatedBeans' of type [org.springframework.integration.config.annotation.Disposables] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)","class":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.807Z","appMessage":"Tomcat initialized with port(s): 8080 (http)","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.817Z","appMessage":"Initializing ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.819Z","appMessage":"Starting service [Tomcat]","class":"org.apache.catalina.core.StandardService","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.820Z","appMessage":"Starting Servlet engine: [Apache Tomcat/9.0.50]","class":"org.apache.catalina.core.StandardEngine","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.950Z","appMessage":"Initializing Spring embedded WebApplicationContext","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:40.951Z","appMessage":"Root WebApplicationContext: initialization completed in 2168 ms","class":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:41.553Z","appMessage":"Cannot find template location: classpath:/templates/ (please add some templates or check your Thymeleaf configuration)","class":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration","thread":"restartedMain","level":"WARN","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:41.730Z","appMessage":"Can't determine default function definition. Please use 'spring.cloud.function.definition' property to explicitly define it.","class":"org.springframework.cloud.function.context.catalog.BeanFactoryAwareFunctionRegistry","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:41.994Z","appMessage":"LiveReload server is running on port 35729","class":"org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.071Z","appMessage":"Exposing 17 endpoint(s) beneath base path ''","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.173Z","appMessage":"Adding {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","class":"org.springframework.integration.endpoint.EventDrivenConsumer","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.174Z","appMessage":"Channel 'kafka-spring-cloud-stream.errorChannel' has 1 subscriber(s).","class":"org.springframework.integration.channel.PublishSubscribeChannel","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.175Z","appMessage":"started bean '_org.springframework.integration.errorLogger'","class":"org.springframework.integration.endpoint.EventDrivenConsumer","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.177Z","appMessage":"Starting ProtocolHandler [\"http-nio-8080\"]","class":"org.apache.coyote.http11.Http11NioProtocol","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.213Z","appMessage":"Tomcat started on port(s): 8080 (http) with context path ''","class":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:30:42.254Z","appMessage":"Started Application in 4.462 seconds (JVM running for 5.249)","class":"com.kafka.data.Application","thread":"restartedMain","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:31:04.970Z","appMessage":"Initializing Spring DispatcherServlet 'dispatcherServlet'","class":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread":"http-nio-8080-exec-1","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:31:04.971Z","appMessage":"Initializing Servlet 'dispatcherServlet'","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:31:04.974Z","appMessage":"Completed initialization in 2 ms","class":"org.springframework.web.servlet.DispatcherServlet","thread":"http-nio-8080-exec-1","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:31:37.105Z","appMessage":"ApiController::start(): Start","class":"com.kafka.data.controller.ApiController","thread":"http-nio-8080-exec-5","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:33:55.194Z","appMessage":"Removing {logging-channel-adapter:_org.springframework.integration.errorLogger} as a subscriber to the 'errorChannel' channel","class":"org.springframework.integration.endpoint.EventDrivenConsumer","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:33:55.195Z","appMessage":"Channel 'kafka-spring-cloud-stream.errorChannel' has 0 subscriber(s).","class":"org.springframework.integration.channel.PublishSubscribeChannel","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
{"timestamp":"2021-08-15T18:33:55.196Z","appMessage":"stopped bean '_org.springframework.integration.errorLogger'","class":"org.springframework.integration.endpoint.EventDrivenConsumer","thread":"SpringApplicationShutdownHook","level":"INFO","appName":"kafka-spring-cloud-stream","appCode":"RRRR"}
